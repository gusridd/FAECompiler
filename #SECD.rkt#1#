#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 5609 0 28 3 10 #"#lang play"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"stack.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"print-only-errors"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Machine definition"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"deftype"
0 0 24 3 1 #" "
0 0 14 3 11 #"Instruction"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"CLOSURE_CONST"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"ADD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"SUB"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"AND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"OR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"NOT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"LET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"RETURN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"IF"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; values"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"deftype"
0 0 24 3 1 #" "
0 0 14 3 3 #"Val"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"closureV"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; intermediate"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"deftype"
0 0 24 3 1 #" "
0 0 14 3 12 #"Intermediate"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Debug function for the machine"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"debug-run"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"\\ninstructions: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"\\nstack: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"stack-debug"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Counter for conditional branch definitions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ["
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #"() ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 1 #"c"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; run :: List[Instruction], Stack[Instructions], List -> CONST"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 27 #";(debug-run ins-list stack)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-size"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"CORRUPT_ENDING_STATE\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 14 #"non-local-exn?"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 2 #"ex"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"exn-message"
0 0 24 3 1 #" "
0 0 14 3 2 #"ex"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 19 3 22 #"\"CORRUPT_ENDING_STATE\""
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 5 #"fault"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 2 #"ex"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 26 #";(print (exn-message ex)) "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 14 #"non-local-exn?"
0 0 24 3 1 #" "
0 0 14 3 5 #"fault"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")) "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")) "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ADD"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"SUB"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 2 #"IF"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stack"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 3 #"run"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #") "
0 0 14 3 9 #"new-stack"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 3 #"run"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 2 #") "
0 0 14 3 9 #"new-stack"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 16 #"))]             "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"LET"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"stack"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 4 #"tail"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"closureV"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"APPLY"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 15 3 3 #"def"
0 0 24 3 2 #" ("
0 0 14 3 8 #"closureV"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ep"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-top"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"stack-push"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"ep"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"RETURN"
0 0 24 3 2 #") "
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #") ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-value"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-top"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-top"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 2 #"ep"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-top"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 10 #"stack-push"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 2 #"ep"
0 0 24 3 8 #")])))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-init"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"ADD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"ADD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"SUB"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"LET"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 2 #"IF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 2 #"IF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"IF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 19 3 22 #"\"CORRUPT_ENDING_STATE\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 3 #"ADD"
0 0 24 3 4 #"))) "
0 0 19 3 22 #"\"CORRUPT_ENDING_STATE\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 3 #"SUB"
0 0 24 3 4 #"))) "
0 0 19 3 22 #"\"CORRUPT_ENDING_STATE\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ADD"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ADD"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"SUB"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"SUB"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 3 #"SUB"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ADD"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 5 #"APPLY"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 5 #"APPLY"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"LET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 4 #"))) "
0 0 19 3 10 #"\"SIGFAULT\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 3 #"ADD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ADD"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"APPLY"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Language definition"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"<expr> ::= <num>"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"         | <id>"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"         | {acc <num>}"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"         | {+ <expr> <expr>}"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"         | {- <expr> <expr>}"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"         | {with <expr> in <expr>}"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"         | {fun {<id>} <expr>}"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"         | {<expr> <expr>}"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"deftype"
0 0 24 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"sub"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"my-if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 24 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; parse :: s-expr -> Expr"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 24 3 3 #") ("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 24 3 3 #") ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"my-if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"with"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; deBruijn :: Expr -> Expr + Intermediate"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 9 #"auxBruijn"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #") ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"sub"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #") ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 5 #"my-if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"my-if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #") ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"bid"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"lvl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                          ))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"sub"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"my-if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"my-if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"with"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 9 #"auxBruijn"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 2 #"} "
0 0 14 3 1 #"x"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 2 #"} "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"y"
0 0 24 3 2 #"} "
0 0 14 3 1 #"x"
0 0 24 3 4 #"}}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 2 #"} "
0 0 14 3 1 #"x"
0 0 24 3 4 #"}}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"}} "
0 0 21 3 1 #"2"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 4 #"with"
0 0 24 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}} "
0 0 14 3 2 #"in"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              {{"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"} {{"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"} "
0 0 21 3 1 #"1"
0 0 24 3 5 #"}}}))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"with"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 2 #" ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; compile :: Expr -> List[Instruction]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 8 #"deBruijn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"comp"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ADD"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"sub"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"SUB"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 5 #"my-if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 2 #"IF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"LET"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"app"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"APPLY"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"RETURN"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 9 #"bruijnFun"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"RETURN"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 12 #"bruijnNumber"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 7 #"))]))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 2 #"'3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"ADD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"SUB"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #"}})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"ADD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"SUB"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"}} "
0 0 21 3 1 #"2"
0 0 24 3 2 #"})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"ADD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ADD"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 2 #" {"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"}})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"LET"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 4 #"with"
0 0 24 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}} "
0 0 14 3 2 #"in"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      {{"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"} {{"
0 0 14 3 3 #"acc"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"} "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}})"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"APPLY"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"APPLY"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"LET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"APPLY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"ENDLET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"i-map"
0 0 24 3 1 #" "
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 7 #"indexed"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 7 #"indexed"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 8 #")))]))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"indexed"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"i-map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"i-map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"i-map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; collect :: List[Expr], (Expr->Bool) -> List[Expr]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collect"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"pred"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 3 #"col"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 3 #"i-l"
0 0 24 3 1 #" "
0 0 14 3 9 #"collected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"found"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 4 #"pred"
0 0 24 3 1 #" "
0 0 14 3 3 #"i-l"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"deep"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #") ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"())]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 2 #"IF"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()))]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()])) "
0 0 14 3 3 #"i-l"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 5 #"found"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"deep"
0 0 24 3 6 #"))))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"col"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; collectClosures :: List[Expr] -> List[Closure]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"collectClosures"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"collect"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 8 #"CLOSURE?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"collectClosures"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 3 #"ADD"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 3 #"ADD"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"ADD"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"RETURN"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"collectClosures"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"IF"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"collectClosures"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"IF"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"RETURN"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"IF"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"RETURN"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; $t0 -> first parameter"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; $t1 -> second parameter"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; $t3 -> temp usage"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; $t4 -> temp usage"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; $t5 -> temp usage"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; $t6 -> temp usage"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; $t7 -> temp usage"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; $t9 RESERVED for storing $ra between calls to copy"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; 0($fp) -> return address"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; 4($fp) -> old frame pointer "
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; 8($fp) -> env[0] (new-arg)"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; 12($fp) -> env[1]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; rules"
0 0 24 29 1 #"\n"
0 0 17 3 176
(
 #";; before function aplication the environment must be copied into th"
 #"e stack, save the frame pointer to the top and the new parameter be "
 #"placed at top. Refresh the fp and the sp"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"spim-compile"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 1 #"l"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 11 #"closureHash"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #" ("
0 0 14 3 5 #"i-map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"fun\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 15 #"collectClosures"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 15 #"replaceClosures"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                               [("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #") ("
0 0 14 3 13 #"CLOSURE_CONST"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"closureHash"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ["
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"])) "
0 0 14 3 1 #"l"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 19 #"replacedClosureHash"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-map"
0 0 24 3 1 #" "
0 0 14 3 11 #"closureHash"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                         [("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"CLOSURE"
0 0 24 3 2 #" ("
0 0 14 3 15 #"replaceClosures"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 7 #")]))))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 9 #"constants"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 2 #" ("
0 0 14 3 11 #"INT_CONST-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"int\""
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 19 3 12 #"\":\\t.word\\t\""
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 17 #"remove-duplicates"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collect"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 1 #" "
0 0 14 3 10 #"INT_CONST?"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 19 #"captureEnvPrimitive"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"\\ncaptureEnv:\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 37 #"\"lw $t0, 12($fp) \\t\\t# t0 = env-size\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 11 #"\"li $t1, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 15 #"\"move $t3, $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 15 #"\"mult $t3, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 40 #"\"mflo $t3 \\t\\t# t3 = t3 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 59
#"\"sub $t3, $sp, $t3 \\t# t3 is the position for the env-size\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 17 #"\"# sw $t0, ($t3)\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 15 #"\"move $sp, $t3\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 63
#"\"addi $sp, $sp, -4 \\t# position sp to receive function pointer\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 51 #"\"move $t4, $t3 \\t# position t4 to receive the copy\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 54 #"\"addi $t3, $fp, 12 \\t# position t3 to source the copy\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 43 #"\"addi $t0, $t0, 1 \\t# to copy the env-size\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 19 #"\"\\ncaptureEnvLoop:\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 63
#"\"beq $t0, $0, captureEnvReturn \\t# if(env-counter == 0) return\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 15 #"\"lw $t5, ($t3)\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 40 #"\"sw $t5, ($t4) \\t\\t# copy one env value\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 18 #"\"addi $t3, $t3, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 54 #"\"addi $t4, $t4, 4 \\t# move both pointers one position\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 42 #"\"sub $t0, $t0, 1 \\t# decrease env-counter\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 18 #"\"j captureEnvLoop\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 21 #"\"\\ncaptureEnvReturn:\""
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 19 3 8 #"\"jr $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                              ))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"copy"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"# t0: copy-count\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 23 #"\"# $t3: origin-pointer\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 28 #"\"# $t4: destination-pointer\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 80
(
 #"\"# DESCRIPTION: copies the memory starting at $t3 to $t4 by a size "
 #"of $t0 words\""
) 0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 13 #"\"# USES: $t5\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 9 #"\"\\ncopy:\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 56
#"\"beq $t0, $0, copyReturn # if(copy-counter == 0) return\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 15 #"\"lw $t5, ($t3)\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 36 #"\"sw $t5, ($t4) \\t\\t# copy one value\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 18 #"\"addi $t3, $t3, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 54 #"\"addi $t4, $t4, 4 \\t# move both pointers one position\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 42 #"\"sub $t0, $t0, 1 \\t# decrease env-counter\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 8 #"\"j copy\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 15 #"\"\\ncopyReturn:\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 8 #"\"jr $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 6 #"access"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"# $t0: counter\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 34 #"\"# $t3: pointer to last structure\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 65
#"\"# DESCRIPTION: leaves $t3 pointing to the structure at env[$t0]\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 13 #"\"# USES: $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 11 #"\"\\naccess:\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 27 #"\"beq $t0, $0, accessReturn\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 38 #"\"lw $t2, ($t3) \\t\\t# t2 = struct size\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 15 #"\"mult $t2, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 10 #"\"mflo $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 19 #"\"add $t3, $t3, $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 44 #"\"sub $t0, $t0, 1 \\t\\t# decrease the counter\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 10 #"\"j access\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 17 #"\"\\naccessReturn:\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 8 #"\"jr $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                 ))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 6 #"ending"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"end:\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 40 #"\"addiu $sp, $sp, 4 \\t# move sp to value\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 43 #"\"li\\t$v0, 1 \\t\\t# code 1 for print integer\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 38 #"\"lw\\t$a0, 0($sp) \\t# integer to print\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 9 #"\"syscall\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 42 #"\"li\\t$v0, 4 \\t\\t# code 4 for print string\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 39 #"\"la\\t$a0, new_line \\t# string to print\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 9 #"\"syscall\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 31 #"\"li\\t$v0, 10 \\t# code for exit\""
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 9 #"\"syscall\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                 ))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"comp"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"e"
0 0 24 3 2 #")("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 9 #"INT_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"# (INT_CONST \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"lw $t0, int\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 16 #"\"sw $t0, 0($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 11 #"\"li $t0, 2\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 40 #"\"sw $t0, 0($sp) \\t# put the size of int\""
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                     ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 10 #"BOOL_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"# (BOOL_CONST \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"lw $t0, \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bool_t\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bool_f\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 16 #"\"sw $t0, 0($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 11 #"\"li $t0, 2\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 40 #"\"sw $t0, 0($sp) \\t# put the size of int\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                      ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"IF"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"n_branch"
0 0 24 3 2 #" ("
0 0 14 3 7 #"counter"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"# (IF)\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 16 #"\"lw $t0, 4($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 19 3 16 #"\"lw $t1, bool_t\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"bne $t0, $t1, branch_false_\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 8 #"n_branch"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                     ))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 2 #"tb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"\\tj branch_end_\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 8 #"n_branch"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"branch_false_\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 8 #"n_branch"
0 0 24 3 2 #") "
0 0 19 3 5 #"\":\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 2 #"fb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"branch_end_\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 8 #"n_branch"
0 0 24 3 2 #") "
0 0 19 3 5 #"\":\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                       ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 13 #"CLOSURE_CONST"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"# (CLOSURE_CONST \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 17 #"\"#sw $ra, 0($fp)\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 16 #"\"jal captureEnv\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 17 #"\"#lw $ra, 0($fp)\""
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"la $t0, \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 16 #"\"sw $t0, 0($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 19 #"\"addi $sp, $sp, -4\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 17 #"\"lw $t0, 12($fp)\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 19 #"\"addiu $t0, $t0, 3\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 51 #"\"sw $t0, 0($sp) \\t\\t# put the function size at top\""
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                         ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 6 #"ACCESS"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"\\n\\t# (ACCESS \""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 52 #"\"addi $t3, $fp, 16 \\t# t3 points to first env value\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 11 #"\"li $t1, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"li $t0,\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 19 3 24 #"\"\\t\\t# position counter\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 12 #"\"jal access\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 42 #"\"lw $t0, ($t3) \\t\\t# save the struct size\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $t2, $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"mult $t2, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 10 #"\"mflo $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 19 #"\"sub $t4, $sp, $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $sp, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 10 #"\"jal copy\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                  ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 3 #"ADD"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"# (ADD)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 16 #"\"lw $t0, 4($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 17 #"\"lw $t1, 12($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 19 #"\"add $t1, $t1, $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 17 #"\"sw $t1, 12($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 19 #"\"addiu $sp, $sp, 8\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                             ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 3 #"SUB"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"# (SUB)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 16 #"\"lw $t0, 4($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 17 #"\"lw $t1, 12($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 19 #"\"sub $t1, $t1, $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 17 #"\"sw $t1, 12($sp)\""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 19 3 19 #"\"addiu $sp, $sp, 8\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                             ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 5 #"APPLY"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"# (APPLY)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 50 #"\"# copy the function environment into a new frame\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 45 #"\"lw $t0, 0($sp) \\t\\t# argument-size into $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 11 #"\"li $t1, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"mult $t0, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 40 #"\"mflo $t0 \\t\\t# t0 = t0 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 50 #"\"add $t0, $sp $t0 \\t# $t0 points to function size\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 54 #"\"# calculate the $ra for the call and save it into t8\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 58
#"\"# $ra is the address at the base of the calling function\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"lw $t8, ($t0)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 17 #"\"sub $t8, $t8, 1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"mult $t8, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 40 #"\"mflo $t8 \\t\\t# t4 = t4 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 45 #"\"add $t8, $t0, $t8 \\t# return_address in $t8\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 56
#"\"lw $t6, 4($t0) \\t\\t# store function pointer to the end\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 45 #"\"add $t3, $t0, 12 \\t# t3 points to env start\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 36 #"\"lw $t4, 8($t0) \\t\\t# t4 = env-size\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 33 #"\"move $t2, $t4 \\t\\t# t2 env-size\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"mult $t4, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 40 #"\"mflo $t4 \\t\\t# t4 = t4 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 19 #"\"sub $t4, $sp, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t5, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t0, $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 10 #"\"jal copy\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 64
#"\"# copy the argument into the head of the new frame environment\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 45 #"\"lw $t0, 0($sp) \\t\\t# argument-size into $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 48 #"\"add $t2, $t2, $t0 \\t# t2 = env-size + arg-size\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t4, $t2\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"mult $t4, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 40 #"\"mflo $t4 \\t\\t# t4 = t4 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 46 #"\"sub $t4, $sp, $t4 \\t# t4 aligned to copy arg\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t7, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 20 #"\"# addi $t2, $t2, 1\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 47 #"\"sw $t2, -4($t4) \\t\\t# new env-size positioned\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 49 #"\"move $t3, $sp \\t\\t# t3 points to argument start\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 10 #"\"jal copy\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 25 #"\"# copy old frame values\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 17 #"\"sw $ra, -8($t7)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 18 #"\"sw $fp, -12($t7)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 18 #"\"sw $t8, -16($t7)\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 18 #"\"sub $t7, $t7, 16\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $sp, $t7\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 15 #"\"move $fp, $sp\""
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 19 3 29 #"\"jal $t6 \\t\\t# call function\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                               ))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 6 #"RETURN"
0 0 24 3 3 #") ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 12 #"\"# (RETURN)\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 49 #"\"lw $t0, 0($sp) \\t\\t# return value-size into $t0\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 51 #"\"lw $t8, 0($fp) \\t\\t# return address base into $t8\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 17 #"\"sub $t4, $t0, 1\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 11 #"\"li $t1, 4\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 15 #"\"mult $t4, $t1\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 40 #"\"mflo $t4 \\t\\t# t4 = t4 * 4 (alignment)\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 19 #"\"sub $t4, $t8, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 15 #"\"move $t3, $sp\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 15 #"\"move $t6, $t4\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 15 #"\"move $t9, $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 10 #"\"jal copy\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 15 #"\"move $ra, $t9\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 31 #"\"move $sp, $t6 \\t# restore $sp\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 32 #"\"lw $ra, 8($fp) \\t# restore $ra\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 32 #"\"lw $fp, 4($fp) \\t# restore $fp\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 19 3 8 #"\"jr $ra\""
0 0 24 3 7 #"))]))] "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 7 #"funDefs"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inline"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-map"
0 0 24 3 1 #" "
0 0 14 3 19 #"replacedClosureHash"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 19 3 16 #"\": # label for \""
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 19 3 1 #"\""
0 0 19 3 3 #"\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 19 3 1 #"\""
0 0 19 3 6 #"\\n\\tsw"
0 0 19 3 1 #" "
0 0 19 3 3 #"$ra"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 1 #"8"
0 0 19 3 1 #"("
0 0 19 3 3 #"$fp"
0 0 19 3 2 #") "
0 0 19 3 3 #"\\t#"
0 0 19 3 1 #" "
0 0 19 3 4 #"save"
0 0 19 3 1 #" "
0 0 19 3 3 #"old"
0 0 19 3 4 #" $ra"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"comp"
0 0 24 3 2 #" ("
0 0 14 3 11 #"CLOSURE-ins"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                             ))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                      ))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"\\t\\t.data\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 1 #"\""
0 0 19 3 18 #"new_line:\\t.asciiz"
0 0 19 3 10 #" \\\"\\\\n\\\"\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 20 #"\"bool_t:\\t.word\\t1\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 20 #"\"bool_f:\\t.word\\t0\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 9 #"constants"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 14 #"\"\\n\\t\\t.text\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 4 #"copy"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 6 #"access"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 19 #"captureEnvPrimitive"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 7 #"funDefs"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 8 #"\"main:\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 1 #"\""
0 0 19 3 6 #"\\taddi"
0 0 19 3 1 #" "
0 0 19 3 3 #"$sp"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"$sp"
0 0 19 3 1 #","
0 0 19 3 6 #" -12\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 1 #"\""
0 0 19 3 6 #"\\tmove"
0 0 19 3 1 #" "
0 0 19 3 3 #"$fp"
0 0 19 3 1 #","
0 0 19 3 6 #" $sp\\n"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"foldr"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"comp"
0 0 24 3 2 #" ("
0 0 14 3 15 #"replaceClosures"
0 0 24 3 1 #" "
0 0 14 3 8 #"ins-list"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 6 #"ending"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                   )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"spim-compile-to-file"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-to-file"
0 0 24 3 2 #" ("
0 0 14 3 12 #"spim-compile"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-expr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 8 #"filename"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 23 3 6 #"#:mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"replace"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"y"
0 0 24 3 2 #"} "
0 0 14 3 1 #"y"
0 0 24 3 3 #"}} "
0 0 21 3 1 #"0"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"{{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"y"
0 0 24 3 2 #"} "
0 0 14 3 1 #"x"
0 0 24 3 3 #"}} "
0 0 21 3 1 #"3"
0 0 24 3 2 #"} "
0 0 21 3 1 #"4"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"{{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 2 #"} "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 3 #"arg"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 5 #"}}} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}} "
0 0 21 3 1 #"5"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 1 #"+"
0 0 24 3 2 #" {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 2 #"} "
0 0 14 3 1 #"f"
0 0 24 3 2 #"} "
0 0 21 3 1 #"3"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"}}}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" {"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"}}} "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"f"
0 0 24 3 3 #"} {"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #"}} "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    (("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 4 #") (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 7 #")))))) "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 8 #"))))))) "
0 0 21 3 1 #"3"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 12 #"spim-compile"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"spim-compile-to-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"s.s\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"programs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"{{"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"x"
0 0 24 3 3 #"} {"
0 0 14 3 3 #"fun"
0 0 24 3 2 #" {"
0 0 14 3 1 #"y"
0 0 24 3 2 #"} "
0 0 14 3 1 #"y"
0 0 24 3 3 #"}} "
0 0 21 3 1 #"0"
0 0 24 3 4 #"})])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"i-map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 4 #"prog"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 20 #"spim-compile-to-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"prog"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 8 #"programs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"Y"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 4 #") (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"almost-factorial"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 2 #" ("
0 0 14 3 1 #"Y"
0 0 24 3 1 #" "
0 0 14 3 16 #"almost-factorial"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"((("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 4 #") (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 7 #")))))) "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 8 #"))))))) "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
